{"version":3,"sources":["components/ContactForm/components/Header/Header.js","validateForm.js","components/ContactForm/components/Form/FormControl/NameInput.js","components/ContactForm/components/Form/FormControl/SurnameInput.js","components/ContactForm/components/Form/FormControl/EmailInput.js","components/ContactForm/components/Form/FormControl/TextareaInput.js","components/ContactForm/components/Form/FormControl/RadioInput.js","components/ContactForm/components/Form/FormControl/Checkbox.js","components/ContactForm/components/Form/Form.js","components/ContactForm/components/Message/Message.js","components/ContactForm/ContactForm.js","App.js","index.js"],"names":["Header","className","nameValidation","required","value","message","pattern","minLength","maxLength","surnameValidation","emailValidation","textareaValidation","radioButtonValidation","checkboxValidation","NameInput","register","errors","styledError","htmlFor","id","placeholder","style","name","input","SurnameInput","surname","EmailInput","email","TextareaInput","description","RadioInput","label","type","Checkbox","termsRead","color","fontSize","border","Form","setIsSubmitted","useForm","handleSubmit","reset","formState","onSubmit","gender","styledMessage","backgroundColor","Message","isSubmitted","ContactForm","useState","useEffect","setIntervalId","setTimeout","clearInterval","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.349b224f.chunk.js","sourcesContent":["const Header = () => (\n  <header className=\"header\">\n    <h1 className=\"heading\">Contact Form</h1>\n  </header>\n);\n\nexport default Header;\n","export const nameValidation = {\n  required: { value: true, message: \"Name is required\" },\n  pattern: { value: /^[A-Za-z]+$/i, message: \"Name is invalid\" },\n  minLength: { value: 3, message: \"Min length of name is 3\" },\n  maxLength: { value: 15, message: \"Max length of name is 15\" },\n};\n\nexport const surnameValidation = {\n  required: { value: true, message: \"Surname is required\" },\n  pattern: { value: /^[A-Za-z]+$/i, message: \"Surname is invalid\" },\n  minLength: { value: 3, message: \"Min length of surname is 3\" },\n  maxLength: { value: 15, message: \"Max length of surname is 15\" },\n};\n\nexport const emailValidation = {\n  required: { value: true, message: \"Email is required\" },\n  pattern: {\n    value: /^$|^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$/,\n    message: \"Email is invalid\",\n  },\n};\n\nexport const textareaValidation = {\n  required: { value: true, message: \"Description is required\" },\n  minLength: { value: 10, message: \"Description is to short\" },\n};\n\nexport const radioButtonValidation = {\n  required: { value: true, message: \"Type of gender is required\" },\n};\n\nexport const checkboxValidation = {\n  required: { value: true, message: \"Please, read terms & condition\" },\n};\n","import { nameValidation } from \"../../../../../validateForm\";\n\nconst NameInput = ({ register, errors, styledError }) => (\n  <div className=\"form-control-wrapper\">\n    <label className=\"form-label\" htmlFor=\"name\">\n      Name:\n    </label>\n    <input\n      {...register(\"name\", { ...nameValidation })}\n      id=\"name\"\n      placeholder=\"enter your name\"\n      style={errors.name ? styledError.input : null}\n      className=\"form-control\"\n    ></input>\n    {errors.name && <p style={styledError.message}>{errors.name.message}</p>}\n  </div>\n);\n\nexport default NameInput;\n","import { surnameValidation } from \"../../../../../validateForm\";\n\nconst SurnameInput = ({ register, errors, styledError }) => (\n  <div className=\"form-control-wrapper\">\n    <label className=\"form-label\" htmlFor=\"surname\">\n      Surname:\n    </label>\n    <input\n      {...register(\"surname\", { ...surnameValidation })}\n      id=\"surname\"\n      placeholder=\"enter your surname\"\n      style={errors.surname ? styledError.input : null}\n      className=\"form-control\"\n    ></input>\n    {errors.surname && (\n      <p style={styledError.message}>{errors.surname.message}</p>\n    )}\n  </div>\n);\n\nexport default SurnameInput;\n","import { emailValidation } from \"../../../../../validateForm\";\n\nconst EmailInput = ({ register, errors, styledError }) => (\n  <div className=\"form-control-wrapper\">\n    <label className=\"form-label\" htmlFor=\"email\">\n      Email:\n    </label>\n    <input\n      {...register(\"email\", { ...emailValidation })}\n      id=\"email\"\n      placeholder=\"enter your email\"\n      style={errors.email ? styledError.input : null}\n      className=\"form-control e\"\n    ></input>\n    {errors.email && <p style={styledError.message}>{errors.email.message}</p>}\n  </div>\n);\n\nexport default EmailInput;\n","import { textareaValidation } from \"../../../../../validateForm\";\n\nconst TextareaInput = ({ register, errors, styledError }) => (\n  <div className=\"form-control-wrapper\">\n    <label className=\"form-label\" htmlFor=\"description\">\n      Description:\n    </label>\n    <textarea\n      {...register(\"description\", { ...textareaValidation })}\n      id=\"description\"\n      style={errors.description ? styledError.input : null}\n      className=\"form-control form-control-textarea\"\n    ></textarea>\n    {errors.description && (\n      <p style={styledError.message}>{errors.description.message}</p>\n    )}\n  </div>\n);\n\nexport default TextareaInput;\n","import { radioButtonValidation } from \"../../../../../validateForm\";\n\nconst RadioInput = ({ register, value, label }) => (\n  <div>\n    <input\n      {...register(\"gender\", { ...radioButtonValidation })}\n      type=\"radio\"\n      value={value}\n      id=\"gender\"\n    />\n    <label className=\"form-label form-label-padding\" htmlFor=\"gender\">\n      {label}\n    </label>\n  </div>\n);\n\nexport default RadioInput;\n","import { checkboxValidation } from \"../../../../../validateForm\";\n\nconst Checkbox = ({ register, errors, styledError }) => (\n  <div>\n    <p className=\"form-paragraph\">Have you read the terms and conditions?</p>\n    <label htmlFor=\"termsRead\">If Yes:</label>\n    <input\n      {...register(\"termsRead\", { ...checkboxValidation })}\n      type=\"checkbox\"\n      value=\"termsRead\"\n      id=\"termsRead\"\n    />\n    {errors.termsRead && (\n      <p style={styledError.message}>{errors.termsRead.message}</p>\n    )}\n  </div>\n);\n\nexport default Checkbox;\n","import { useForm } from \"react-hook-form\";\n\nimport {\n  NameInput,\n  SurnameInput,\n  EmailInput,\n  TextareaInput,\n  RadioInput,\n  Checkbox,\n} from \"./FormControl\";\n\nconst styledError = {\n  message: {\n    color: \"crimson\",\n    fontSize: \"14px\",\n  },\n  input: { border: \"1px solid crimson\" },\n};\n\nconst Form = ({ setIsSubmitted }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = () => {\n    setIsSubmitted(true);\n    reset();\n  };\n\n  return (\n    <>\n      <p className=\"paragraph-required\">*All fields required</p>\n      <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n        <NameInput\n          register={register}\n          errors={errors}\n          styledError={styledError}\n        />\n\n        <SurnameInput\n          register={register}\n          errors={errors}\n          styledError={styledError}\n        />\n\n        <EmailInput\n          register={register}\n          errors={errors}\n          styledError={styledError}\n        />\n\n        <TextareaInput\n          register={register}\n          errors={errors}\n          styledError={styledError}\n        />\n\n        <div className=\"form-control-wrapper\">\n          <div>\n            <p className=\"form-paragraph\">Geneder options:</p>\n\n            <RadioInput register={register} value=\"female\" label=\"female\" />\n\n            <RadioInput register={register} value=\"male\" label=\"male\" />\n\n            <RadioInput register={register} value=\"other\" label=\"other\" />\n\n            {errors.gender && (\n              <p style={styledError.message}>{errors.gender.message}</p>\n            )}\n          </div>\n        </div>\n\n        <Checkbox\n          register={register}\n          errors={errors}\n          styledError={styledError}\n        />\n\n        <button className=\"form-button\">send</button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","import \"./styles.css\";\n\nconst styledMessage = {\n  backgroundColor: \"#74b9ff\",\n  color: \"white\",\n};\n\nconst Message = ({ isSubmitted }) => (\n  <footer\n    className=\"submitted-footer\"\n    style={isSubmitted ? styledMessage : null}\n  >\n    {isSubmitted && (\n      <p className=\"animation-text-onSubmit\">Form has been sent!</p>\n    )}\n  </footer>\n);\n\nexport default Message;\n","import { useState, useEffect } from \"react\";\n\nimport \"./styles.css\";\n\nimport { Header, Form, Message } from \"./components\";\n\nconst ContactForm = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  useEffect(() => {\n    const setIntervalId = setTimeout(() => {\n      setIsSubmitted(false);\n    }, 2000);\n\n    return () => clearInterval(setIntervalId);\n  });\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Form setIsSubmitted={setIsSubmitted} />\n      <Message isSubmitted={isSubmitted} />\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import \"./styles.css\";\nimport ContactForm from \"./components\";\n\nexport default function App() {\n  return <ContactForm />;\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}